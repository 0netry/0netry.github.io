{"name":"逆向","slug":"逆向","count":14,"postlist":[{"title":"Windows动态反调试技术（一）","uid":"744ee437e256eacc7e89be203fb836fd","slug":"Windows动态反调试技术（一）","date":"2025-07-09T13:39:34.000Z","updated":"2025-06-09T21:26:29.686Z","comments":true,"path":"api/articles/Windows动态反调试技术（一）.json","keywords":null,"cover":[],"text":"异常SetUnhandledExceptionFilter()进程中发生异常时，若SEH未处理或注册的SEH根本不存在，此时会调用执行系统的kernel32!U...","permalink":"/post/Windows动态反调试技术（一）","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"Windows动态反调试技术","slug":"Windows动态反调试技术","count":2,"path":"api/tags/Windows动态反调试技术.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Windows动态反调试技术（二）","uid":"bd414604d17df76b597f4081d3f02f14","slug":"Windows动态反调试技术（二）","date":"2025-06-11T13:05:26.000Z","updated":"2025-06-09T21:26:58.273Z","comments":true,"path":"api/articles/Windows动态反调试技术（二）.json","keywords":null,"cover":[],"text":"单步执行TF值设置为1时，CPU将进入单步执行（Single Step）模式。单步执行模式中，CPU执行1条指令后即触发1个EXCEPTION_SINGLE_S...","permalink":"/post/Windows动态反调试技术（二）","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"Windows动态反调试技术","slug":"Windows动态反调试技术","count":2,"path":"api/tags/Windows动态反调试技术.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"某白加黑木马样本分析","uid":"d8609f7faf5edcbbc1a1648becebe73e","slug":"某白加黑木马样本分析","date":"2025-05-28T05:39:13.000Z","updated":"2025-06-05T12:27:57.863Z","comments":true,"path":"api/articles/某白加黑木马样本分析.json","keywords":null,"cover":[],"text":"一、概述样本基本信息（4个文件）样本名称：a5c0Lm.exe、ClassicExplorer32.dll、ffff.pol、ffff.lop MD5：ae10...","permalink":"/post/某白加黑木马样本分析","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"恶意样本","slug":"恶意样本","count":2,"path":"api/tags/恶意样本.json"},{"name":"白加黑技术","slug":"白加黑技术","count":1,"path":"api/tags/白加黑技术.json"},{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"恶意iso文件分析","uid":"0fa9719b9833354b768a1db954a5b0e7","slug":"恶意iso文件分析","date":"2023-04-08T02:22:11.000Z","updated":"2025-06-05T12:30:07.178Z","comments":true,"path":"api/articles/恶意iso文件分析.json","keywords":null,"cover":[],"text":"iso信息文件信息 文件内容 doc文档doc加密数据 WinWord.exe即Concept Note Strategic Dialog Version 30...","permalink":"/post/恶意iso文件分析","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"恶意样本","slug":"恶意样本","count":2,"path":"api/tags/恶意样本.json"},{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"iso文件","slug":"iso文件","count":1,"path":"api/tags/iso文件.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Windows静态反调试技术（三）","uid":"0f5e7a00cb9e0d76fb61aefba4cb6bf5","slug":"Windows静态反调试技术（三）","date":"2022-06-25T13:18:17.000Z","updated":"2025-06-09T21:41:41.029Z","comments":true,"path":"api/articles/Windows静态反调试技术（三）.json","keywords":null,"cover":null,"text":"TLS回调函数由于TLS回调函数会先于EP代码执行，可以在回调函数内部使用IsDebuggerPresent()等函数判断调试与否，再决定是否继续运行程序。 E...","permalink":"/post/Windows静态反调试技术（三）","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"Windows静态反调试技术","slug":"Windows静态反调试技术","count":3,"path":"api/tags/Windows静态反调试技术.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Windows静态反调试技术（二）","uid":"4d2341767a6c86040d957eae87d1ec51","slug":"Windows静态反调试技术（二）","date":"2022-06-22T13:16:13.000Z","updated":"2025-06-09T21:41:20.984Z","comments":true,"path":"api/articles/Windows静态反调试技术（二）.json","keywords":null,"cover":[],"text":"NtQueryInformationProcess()NtQueryInformationProcess定义通过NtQueryInformationProces...","permalink":"/post/Windows静态反调试技术（二）","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"Windows静态反调试技术","slug":"Windows静态反调试技术","count":3,"path":"api/tags/Windows静态反调试技术.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Windows静态反调试技术（一）","uid":"cfe529b139f3ec3d5a0094d71b2823b9","slug":"Windows静态反调试技术（一）","date":"2022-06-20T13:12:54.000Z","updated":"2025-06-09T21:41:11.315Z","comments":true,"path":"api/articles/Windows静态反调试技术（一）.json","keywords":null,"cover":[],"text":"PEB利用PEB结构体信息可以判断当前进程是否处于被调试状态。回顾下PEB结构体的成员： Win7 x86中： 123456789101112131415161...","permalink":"/post/Windows静态反调试技术（一）","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"Windows静态反调试技术","slug":"Windows静态反调试技术","count":3,"path":"api/tags/Windows静态反调试技术.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"IDA添加结构体","uid":"d90627d53e222069704f901ed1b80995","slug":"IDA添加结构体","date":"2022-06-09T08:49:43.000Z","updated":"2025-06-09T10:16:41.620Z","comments":true,"path":"api/articles/IDA添加结构体.json","keywords":null,"cover":[],"text":"导入头文件方法①首先菜单栏选择File -> Load File -> Parse C Header file（Ctrl+F9）然后导入结构体文件（xxx.h）...","permalink":"/post/IDA添加结构体","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"IDA使用","slug":"IDA使用","count":1,"path":"api/tags/IDA使用.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"PE文件——基址重定位","uid":"79cf73108f662b9d6b8f237086d2463b","slug":"PE文件——基址重定位","date":"2022-05-03T14:33:53.000Z","updated":"2025-06-09T08:38:09.203Z","comments":true,"path":"api/articles/PE文件——基址重定位.json","keywords":null,"cover":[],"text":"当链接器生成一个PE文件时，会假设这个文件在执行时被装载到默认的基地址处，并把code和data的相关地址都写入PE文件。如果载入时将默认的值作为基地址载入，则...","permalink":"/post/PE文件——基址重定位","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"PE文件","slug":"PE文件","count":3,"path":"api/tags/PE文件.json"},{"name":"基址重定位","slug":"基址重定位","count":1,"path":"api/tags/基址重定位.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"TLS回调函数","uid":"66da80b7dfd28e13d279b8154dbcb5eb","slug":"TLS回调函数","date":"2022-04-15T07:23:02.000Z","updated":"2025-06-08T15:26:19.727Z","comments":true,"path":"api/articles/TLS回调函数.json","keywords":null,"cover":[],"text":"TLS回调函数TLS（Thread Local Storage，线程局部存储）回调函数常用于反调试 TLSTLS是各线程的独立的数据存储空间。使用TLS技术可在...","permalink":"/post/TLS回调函数","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"TLS回调函数","slug":"TLS回调函数","count":1,"path":"api/tags/TLS回调函数.json"},{"name":"PE结构","slug":"PE结构","count":1,"path":"api/tags/PE结构.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"认识PEB","uid":"716452a8f7139876fcd7d9fc7c5bbc0e","slug":"认识PEB","date":"2022-04-09T14:10:54.000Z","updated":"2025-06-08T15:18:01.815Z","comments":true,"path":"api/articles/认识PEB.json","keywords":null,"cover":[],"text":"PEB（Process Environment Block，进程环境块） PEB存放进程信息的结构体。 PEB 结构体的定义PEB结构体成员使用Windbg调试...","permalink":"/post/认识PEB","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"PEB","slug":"PEB","count":1,"path":"api/tags/PEB.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"认识TEB","uid":"cd812a002a8157c55aad5231f6135034","slug":"认识TEB","date":"2022-04-08T11:55:04.000Z","updated":"2025-06-08T15:09:36.776Z","comments":true,"path":"api/articles/认识TEB.json","keywords":null,"cover":[],"text":"TEB（Threat Environment Block，线程环境块） TEB指线程环境块，该结构体包含进程中运行线程的各种信息，进程中的每个线程都对应一个TE...","permalink":"/post/认识TEB","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"TEB","slug":"TEB","count":1,"path":"api/tags/TEB.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"PE解析——IAT","uid":"72108d70d9a862b742fe8e97b0c6b415","slug":"PE解析——IAT","date":"2021-12-23T11:51:51.000Z","updated":"2025-06-08T15:10:02.038Z","comments":true,"path":"api/articles/PE解析——IAT.json","keywords":null,"cover":[],"text":"IAT全称Import Address Table，即导入地址表 IMAGE_IMPORT_DESCRIPTOR结构体123456789101112131415...","permalink":"/post/PE解析——IAT","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"PE文件","slug":"PE文件","count":3,"path":"api/tags/PE文件.json"},{"name":"IAT","slug":"IAT","count":1,"path":"api/tags/IAT.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"PE文件格式","uid":"cb93d0cd82726110c8a724aa5589f118","slug":"PE文件格式","date":"2021-12-21T12:42:30.000Z","updated":"2025-06-08T15:10:20.465Z","comments":true,"path":"api/articles/PE文件格式.json","keywords":null,"cover":[],"text":"PE文件种类 种类 主扩展名 可执行系列 EXE、SRC 库系列 DLL、OCX、CPL、DRV 驱动程序系列 SYS、VXD 对象文件系列 OBJ 严格来说，...","permalink":"/post/PE文件格式","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":14,"path":"api/tags/逆向.json"},{"name":"PE文件","slug":"PE文件","count":3,"path":"api/tags/PE文件.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}