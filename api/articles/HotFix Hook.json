{"title":"HotFix Hook","uid":"d3476856058b1cb70ed747b50ca39e21","slug":"HotFix Hook","date":"2022-03-28T03:12:13.000Z","updated":"2025-06-05T12:13:51.065Z","comments":true,"path":"api/articles/HotFix Hook.json","keywords":null,"cover":[],"content":"<h1 id=\"API代码修改技术的问题\"><a href=\"#API代码修改技术的问题\" class=\"headerlink\" title=\"API代码修改技术的问题\"></a>API代码修改技术的问题</h1><p>对于全局API钩取——基于Win10的隐藏notepad.exe练习——stealth2.cpp——NewCreateProcessA()函数，其结构简单梳理为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NewCreateProcessA(...)&#123;</span><br><span class=\"line\">\t//①脱钩</span><br><span class=\"line\">\t//②调用原始API</span><br><span class=\"line\">\t//③注入</span><br><span class=\"line\">\t//④挂钩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为正常调用原API，需要先①脱钩（若不脱钩，调用②原始API就会陷入无限循环）。然后在钩取函数返回前再次④钩取，使之进入钩取状态。</p>\n<p>也就是说，每当在程序内部调用CreateProcessA()函数时，NewCreateProcessA()就会被调用执行，不断重复脱钩&#x2F;挂钩。这种操作不仅会造成性能低下，更严重的是在多线程时会产生运行时错误，这是由脱钩&#x2F;挂钩操作要对原API的前5个字节进行修改引起的。</p>\n<p>一个线程尝试运行某段代码时，若另一个线程正在对该段代码进行写操作，这时就会出现冲突，最终引发运行时错误。所以需要一种更安全的API钩取技术。</p>\n<h1 id=\"热补丁（修改7个字节代码）\"><a href=\"#热补丁（修改7个字节代码）\" class=\"headerlink\" title=\"热补丁（修改7个字节代码）\"></a>热补丁（修改7个字节代码）</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>热补丁对应的英文位Hot Patch或Hot Fix，与修改5个字节代码的技术不同，使用热补丁技术时将修改7个字节代码，所以该技术又称为7字节代码修改技术。</p></blockquote>\n<h2 id=\"普通API起始代码的形态\"><a href=\"#普通API起始代码的形态\" class=\"headerlink\" title=\"普通API起始代码的形态\"></a>普通API起始代码的形态</h2><p>（1）API代码以”MOV EDI,EDI”指令开始（IA-32指令：0x8BFF）</p>\n<p>（2）API代码上方有5个NOP指令（IA-32指令：0x90）</p>\n<p>“MOV EDI,EDI”指令大小为2个字节，用于将EDI寄存器的值再次传送给EDI寄存器，这没有什么实际意义。NOP指令为1个字节大小，不进行任何操作（该NOP指令存在于函数与函数之间，甚至都不会被执行）。也就是说，API起始代码的MOV指令（2个字节）与其上方的5个NOP指令（5个字节）合起来共7个字节的指令没有任何意义。</p>\n<p>很显然，kernel32.dll、user32.dll、gdi32.dll是Windows OS相当重要的库。微软为什么使用这种方式来制作系统库呢？原因是为了方便打热补丁。热补丁由API钩取组成，在进程处于运行状态时临时更改进程内存中的库文件（重启系统时，修改的目标库文件会被完全取代）。</p>\n<h2 id=\"工作原理及特征\"><a href=\"#工作原理及特征\" class=\"headerlink\" title=\"工作原理及特征\"></a>工作原理及特征</h2><p>下面使用热补丁方法钩取kernel32.CreateProcessA() API来理解学习热补丁钩取技术</p>\n<h3 id=\"二次跳转\"><a href=\"#二次跳转\" class=\"headerlink\" title=\"二次跳转\"></a>二次跳转</h3><p>首先将API起始代码之前的5个字节修改为FAR JMP（E9 XXXXXXXX），跳转到用户钩取函数处（989A68）。然后将API起始代码的2个字节修改为SHORT JMP指令（EB F9）。该SHORT JMP指令用来跳转到前面的FAR JMP指令处。</p>\n<p>修改之前</p>\n<p><img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/%E4%B8%81%EF%BC%88%E4%BF%AE%E6%94%B97%E4%B8%AA%E5%AD%97%E8%8A%82%E4%BB%A3%E7%A0%81%EF%BC%89/%E5%8E%9F%E5%A7%8BCreateProcessA.png\" alt=\"原始CreateProcessA\"></p>\n<p>修改之后</p>\n<p><img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/%E4%B8%81%EF%BC%88%E4%BF%AE%E6%94%B97%E4%B8%AA%E5%AD%97%E8%8A%82%E4%BB%A3%E7%A0%81%EF%BC%89/%E4%BD%BF%E7%94%A8%E7%83%AD%E8%A1%A5%E4%B8%81%E6%8A%80%E6%9C%AF%E9%92%A9%E5%8F%96CreateProcessA.png\" alt=\"使用热补丁技术钩取CreateProcessA\"></p>\n<p>调用CreateProcessA() API时，遇到API起始地址（77642082）处的JMP kernel32.7764207D指令，就会跳转到紧接其上方的指令地址（7764207D）。然后遇到JMP 989A68指令，跳转到实际钩取的函数地址（989A68）。像这样经过2次连续跳转，就完成了对指定API的钩取操作（称为二次跳转）。这一过程需要注意的是，修改的7个字节的指令（NOP*5、MOV EDI,EDI）原来都是毫无意义的。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>从图中的7764207D、77642082地址可以看出，虽然都是JMP指令，但指令形态不同。7764207D地址处的指令形式为E9 XXXXXXXX，大小为5字节，被称为FAR JMP，用来实现远程跳转（可以跳转到进程内存用户区域中的任意位置）；而77642082地址处的指令形式为EB YY，大小为2字节，被称为SHORT JMP，它只能以当前EIP为基准，在-128~127的范围内跳转。</p></blockquote>\n<h3 id=\"不需要在钩取函数内部进行脱钩-x2F-挂钩操作\"><a href=\"#不需要在钩取函数内部进行脱钩-x2F-挂钩操作\" class=\"headerlink\" title=\"不需要在钩取函数内部进行脱钩&#x2F;挂钩操作\"></a>不需要在钩取函数内部进行脱钩&#x2F;挂钩操作</h3><p>修改代码的前5个字节进行钩取的技术，使用时需要在钩取函数内部反复脱钩、挂钩，这可能导致系统性能下降。而使用热补丁技术钩取API时，不需要在钩取函数内部进行脱钩、挂钩操作。在5个字节代码修改技术中脱钩&#x2F;挂钩是为了调用原函数，而使用热补丁技术钩取API时，在API代码遭到修改的状态下也能正常调用原API。这是因为，从API角度看只是修改了其起始代码的MOV EDI,EDI指令（无意义的2个字节），从[API起始地址+2]地址开始，仍能正常调用原API，且执行的动作完全一样。</p>\n<h1 id=\"基于Win10的隐藏notepad-exe练习\"><a href=\"#基于Win10的隐藏notepad-exe练习\" class=\"headerlink\" title=\"基于Win10的隐藏notepad.exe练习\"></a>基于Win10的隐藏notepad.exe练习</h1><p>stealth3.dll使用了热补丁API钩取技术（即HotFix Hook）</p>\n<h2 id=\"stealth3-cpp源码分析\"><a href=\"#stealth3-cpp源码分析\" class=\"headerlink\" title=\"stealth3.cpp源码分析\"></a>stealth3.cpp源码分析</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;windows.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;tchar.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STR_MODULE_NAME\t\t\t\t\t(<span class=\"string\">L&quot;stealth3.dll&quot;</span>)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STR_HIDE_PROCESS_NAME\t\t\t(<span class=\"string\">L&quot;notepad.exe&quot;</span>)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STATUS_SUCCESS\t\t\t\t\t(0x00000000L) </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> LONG NTSTATUS;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span> _<span class=\"title\">SYSTEM_INFORMATION_CLASS</span> &#123;</span></span><br><span class=\"line\">    SystemBasicInformation = <span class=\"number\">0</span>,</span><br><span class=\"line\">    SystemPerformanceInformation = <span class=\"number\">2</span>,</span><br><span class=\"line\">    SystemTimeOfDayInformation = <span class=\"number\">3</span>,</span><br><span class=\"line\">    SystemProcessInformation = <span class=\"number\">5</span>,</span><br><span class=\"line\">    SystemProcessorPerformanceInformation = <span class=\"number\">8</span>,</span><br><span class=\"line\">    SystemInterruptInformation = <span class=\"number\">23</span>,</span><br><span class=\"line\">    SystemExceptionInformation = <span class=\"number\">33</span>,</span><br><span class=\"line\">    SystemRegistryQuotaInformation = <span class=\"number\">37</span>,</span><br><span class=\"line\">    SystemLookasideInformation = <span class=\"number\">45</span></span><br><span class=\"line\">&#125; SYSTEM_INFORMATION_CLASS;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">SYSTEM_PROCESS_INFORMATION</span> &#123;</span></span><br><span class=\"line\">    ULONG NextEntryOffset;</span><br><span class=\"line\">    BYTE Reserved1[<span class=\"number\">52</span>];</span><br><span class=\"line\">    PVOID Reserved2[<span class=\"number\">3</span>];</span><br><span class=\"line\">    HANDLE UniqueProcessId;</span><br><span class=\"line\">    PVOID Reserved3;</span><br><span class=\"line\">    ULONG HandleCount;</span><br><span class=\"line\">    BYTE Reserved4[<span class=\"number\">4</span>];</span><br><span class=\"line\">    PVOID Reserved5[<span class=\"number\">11</span>];</span><br><span class=\"line\">    SIZE_T PeakPagefileUsage;</span><br><span class=\"line\">    SIZE_T PrivatePageCount;</span><br><span class=\"line\">    LARGE_INTEGER Reserved6[<span class=\"number\">6</span>];</span><br><span class=\"line\">&#125; SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">NTSTATUS</span> <span class=\"params\">(WINAPI *PFZWQUERYSYSTEMINFORMATION)</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    SYSTEM_INFORMATION_CLASS SystemInformationClass, </span></span><br><span class=\"line\"><span class=\"params\">    PVOID SystemInformation, </span></span><br><span class=\"line\"><span class=\"params\">    ULONG SystemInformationLength, </span></span><br><span class=\"line\"><span class=\"params\">    PULONG ReturnLength)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">BOOL</span> <span class=\"params\">(WINAPI *PFCREATEPROCESSA)</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpApplicationName,</span></span><br><span class=\"line\"><span class=\"params\">    LPTSTR lpCommandLine,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    BOOL bInheritHandles,</span></span><br><span class=\"line\"><span class=\"params\">    DWORD dwCreationFlags,</span></span><br><span class=\"line\"><span class=\"params\">    LPVOID lpEnvironment,</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpCurrentDirectory,</span></span><br><span class=\"line\"><span class=\"params\">    LPSTARTUPINFO lpStartupInfo,</span></span><br><span class=\"line\"><span class=\"params\">    LPPROCESS_INFORMATION lpProcessInformation</span></span><br><span class=\"line\"><span class=\"params\">)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">BOOL</span> <span class=\"params\">(WINAPI *PFCREATEPROCESSW)</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpApplicationName,</span></span><br><span class=\"line\"><span class=\"params\">    LPTSTR lpCommandLine,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    BOOL bInheritHandles,</span></span><br><span class=\"line\"><span class=\"params\">    DWORD dwCreationFlags,</span></span><br><span class=\"line\"><span class=\"params\">    LPVOID lpEnvironment,</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpCurrentDirectory,</span></span><br><span class=\"line\"><span class=\"params\">    LPSTARTUPINFO lpStartupInfo,</span></span><br><span class=\"line\"><span class=\"params\">    LPPROCESS_INFORMATION lpProcessInformation</span></span><br><span class=\"line\"><span class=\"params\">)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">BYTE g_pOrgZwQSI[<span class=\"number\">5</span>] = &#123;<span class=\"number\">0</span>,&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL <span class=\"title function_\">hook_by_code</span><span class=\"params\">(LPCSTR szDllName, LPCSTR szFuncName, PROC pfnNew, PBYTE pOrgBytes)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tFARPROC pFunc;</span><br><span class=\"line\">\tDWORD dwOldProtect, dwAddress;</span><br><span class=\"line\">\tBYTE pBuf[<span class=\"number\">5</span>] = &#123;<span class=\"number\">0xE9</span>, <span class=\"number\">0</span>, &#125;;</span><br><span class=\"line\">\tPBYTE pByte;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpFunc = (FARPROC)GetProcAddress(GetModuleHandleA(szDllName), szFuncName);</span><br><span class=\"line\">\tpByte = (PBYTE)pFunc;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( pByte[<span class=\"number\">0</span>] == <span class=\"number\">0xE9</span> )</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(pOrgBytes, pFunc, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdwAddress = (DWORD)pfnNew - (DWORD)pFunc - <span class=\"number\">5</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(&amp;pBuf[<span class=\"number\">1</span>], &amp;dwAddress, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(pFunc, pBuf, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL <span class=\"title function_\">hook_by_hotpatch</span><span class=\"params\">(LPCSTR szDllName, LPCSTR szFuncName, PROC pfnNew)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tFARPROC pFunc;</span><br><span class=\"line\">\tDWORD dwOldProtect, dwAddress;</span><br><span class=\"line\">\tBYTE pBuf[<span class=\"number\">5</span>] = &#123; <span class=\"number\">0xE9</span>, <span class=\"number\">0</span>, &#125;;</span><br><span class=\"line\">    BYTE pBuf2[<span class=\"number\">2</span>] = &#123; <span class=\"number\">0xEB</span>, <span class=\"number\">0xF9</span> &#125;;</span><br><span class=\"line\">\tPBYTE pByte;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpFunc = (FARPROC)GetProcAddress(GetModuleHandleA(szDllName), szFuncName);</span><br><span class=\"line\">\tpByte = (PBYTE)pFunc;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( pByte[<span class=\"number\">0</span>] == <span class=\"number\">0xEB</span> )</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), <span class=\"number\">7</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. NOP (0x90)</span></span><br><span class=\"line\">\tdwAddress = (DWORD)pfnNew - (DWORD)pFunc;</span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(&amp;pBuf[<span class=\"number\">1</span>], &amp;dwAddress, <span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), pBuf, <span class=\"number\">5</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2. MOV EDI, EDI (0x8BFF)</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(pFunc, pBuf2, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), <span class=\"number\">7</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL <span class=\"title function_\">unhook_by_code</span><span class=\"params\">(LPCSTR szDllName, LPCSTR szFuncName, PBYTE pOrgBytes)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tFARPROC pFunc;</span><br><span class=\"line\">\tDWORD dwOldProtect;</span><br><span class=\"line\">\tPBYTE pByte;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpFunc = (FARPROC)GetProcAddress(GetModuleHandleA(szDllName), szFuncName);</span><br><span class=\"line\">\tpByte = (PBYTE)pFunc;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( pByte[<span class=\"number\">0</span>] != <span class=\"number\">0xE9</span> )</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(pFunc, pOrgBytes, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL <span class=\"title function_\">unhook_by_hotpatch</span><span class=\"params\">(LPCSTR szDllName, LPCSTR szFuncName)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FARPROC pFunc;</span><br><span class=\"line\">    DWORD dwOldProtect;</span><br><span class=\"line\">    PBYTE pByte;</span><br><span class=\"line\">    BYTE pBuf[<span class=\"number\">5</span>] = &#123; <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span> &#125;;</span><br><span class=\"line\">    BYTE pBuf2[<span class=\"number\">2</span>] = &#123; <span class=\"number\">0x8B</span>, <span class=\"number\">0xFF</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    pFunc = (FARPROC)GetProcAddress(GetModuleHandleA(szDllName), szFuncName);</span><br><span class=\"line\">    pByte = (PBYTE)pFunc;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( pByte[<span class=\"number\">0</span>] != <span class=\"number\">0xEB</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">    VirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. NOP (0x90)</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), pBuf, <span class=\"number\">5</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2. MOV EDI, EDI (0x8BFF)</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(pFunc, pBuf2, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    VirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL <span class=\"title function_\">SetPrivilege</span><span class=\"params\">(LPCTSTR lpszPrivilege, BOOL bEnablePrivilege)</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    TOKEN_PRIVILEGES tp;</span><br><span class=\"line\">    HANDLE hToken;</span><br><span class=\"line\">    LUID luid;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !OpenProcessToken(GetCurrentProcess(),</span><br><span class=\"line\">                          TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, </span><br><span class=\"line\">\t\t\t              &amp;hToken) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;OpenProcessToken error: %u\\n&quot;</span>, GetLastError());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !LookupPrivilegeValue(<span class=\"literal\">NULL</span>,             <span class=\"comment\">// lookup privilege on local system</span></span><br><span class=\"line\">                              lpszPrivilege,    <span class=\"comment\">// privilege to lookup </span></span><br><span class=\"line\">                              &amp;luid) )          <span class=\"comment\">// receives LUID of privilege</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;LookupPrivilegeValue error: %u\\n&quot;</span>, GetLastError() ); </span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    tp.PrivilegeCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">    tp.Privileges[<span class=\"number\">0</span>].Luid = luid;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( bEnablePrivilege )</span><br><span class=\"line\">        tp.Privileges[<span class=\"number\">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        tp.Privileges[<span class=\"number\">0</span>].Attributes = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Enable the privilege or disable all privileges.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !AdjustTokenPrivileges(hToken, </span><br><span class=\"line\">                               FALSE, </span><br><span class=\"line\">                               &amp;tp, </span><br><span class=\"line\">                               <span class=\"keyword\">sizeof</span>(TOKEN_PRIVILEGES), </span><br><span class=\"line\">                               (PTOKEN_PRIVILEGES) <span class=\"literal\">NULL</span>, </span><br><span class=\"line\">                               (PDWORD) <span class=\"literal\">NULL</span>) )</span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;AdjustTokenPrivileges error: %u\\n&quot;</span>, GetLastError() ); </span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( GetLastError() == ERROR_NOT_ALL_ASSIGNED )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;The token does not have the specified privilege. \\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL <span class=\"title function_\">InjectDll2</span><span class=\"params\">(HANDLE hProcess, LPCTSTR szDllName)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tHANDLE hThread;</span><br><span class=\"line\">\tLPVOID pRemoteBuf;</span><br><span class=\"line\">\tDWORD dwBufSize = (DWORD)(_tcslen(szDllName) + <span class=\"number\">1</span>) * <span class=\"keyword\">sizeof</span>(TCHAR);</span><br><span class=\"line\">\tFARPROC pThreadProc;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpRemoteBuf = VirtualAllocEx(hProcess, <span class=\"literal\">NULL</span>, dwBufSize, </span><br><span class=\"line\">                                MEM_COMMIT, PAGE_READWRITE);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( pRemoteBuf == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">\tWriteProcessMemory(hProcess, pRemoteBuf, (LPVOID)szDllName, </span><br><span class=\"line\">                       dwBufSize, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tpThreadProc = GetProcAddress(GetModuleHandleA(<span class=\"string\">&quot;kernel32.dll&quot;</span>), </span><br><span class=\"line\">                                 <span class=\"string\">&quot;LoadLibraryW&quot;</span>);</span><br><span class=\"line\">\thThread = CreateRemoteThread(hProcess, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>, </span><br><span class=\"line\">                                 (LPTHREAD_START_ROUTINE)pThreadProc, </span><br><span class=\"line\">                                 pRemoteBuf, <span class=\"number\">0</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">\tWaitForSingleObject(hThread, INFINITE);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualFreeEx(hProcess, pRemoteBuf, <span class=\"number\">0</span>, MEM_RELEASE);</span><br><span class=\"line\"></span><br><span class=\"line\">\tCloseHandle(hThread);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">NTSTATUS WINAPI <span class=\"title function_\">NewZwQuerySystemInformation</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    SYSTEM_INFORMATION_CLASS SystemInformationClass, </span></span><br><span class=\"line\"><span class=\"params\">\tPVOID SystemInformation, </span></span><br><span class=\"line\"><span class=\"params\">\tULONG SystemInformationLength, </span></span><br><span class=\"line\"><span class=\"params\">\tPULONG ReturnLength)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tNTSTATUS status;</span><br><span class=\"line\">\tFARPROC pFunc;</span><br><span class=\"line\">\tPSYSTEM_PROCESS_INFORMATION pCur, pPrev;</span><br><span class=\"line\">\t<span class=\"type\">char</span> szProcName[MAX_PATH] = &#123;<span class=\"number\">0</span>,&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tunhook_by_code(<span class=\"string\">&quot;ntdll.dll&quot;</span>, <span class=\"string\">&quot;ZwQuerySystemInformation&quot;</span>, g_pOrgZwQSI);</span><br><span class=\"line\"></span><br><span class=\"line\">\tpFunc = GetProcAddress(GetModuleHandleA(<span class=\"string\">&quot;ntdll.dll&quot;</span>), </span><br><span class=\"line\">                           <span class=\"string\">&quot;ZwQuerySystemInformation&quot;</span>);</span><br><span class=\"line\">\tstatus = ((PFZWQUERYSYSTEMINFORMATION)pFunc)</span><br><span class=\"line\">             (SystemInformationClass, SystemInformation, </span><br><span class=\"line\">              SystemInformationLength, ReturnLength);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( status != STATUS_SUCCESS )</span><br><span class=\"line\">\t\t<span class=\"keyword\">goto</span> __NTQUERYSYSTEMINFORMATION_END;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( SystemInformationClass == SystemProcessInformation )</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tpCur = (PSYSTEM_PROCESS_INFORMATION)SystemInformation;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(TRUE)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pCur-&gt;Reserved2[<span class=\"number\">1</span>] != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!_tcsicmp((PWSTR)pCur-&gt;Reserved2[<span class=\"number\">1</span>], STR_HIDE_PROCESS_NAME))</span><br><span class=\"line\">\t\t\t    &#123;</span><br><span class=\"line\">\t\t\t\t    <span class=\"keyword\">if</span>(pCur-&gt;NextEntryOffset == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\t    pPrev-&gt;NextEntryOffset = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t    <span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t    pPrev-&gt;NextEntryOffset += pCur-&gt;NextEntryOffset;</span><br><span class=\"line\">\t\t\t    &#125;</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">else</span>\t\t</span><br><span class=\"line\">\t\t\t\t    pPrev = pCur;\t<span class=\"comment\">// 盔窍绰 橇肺技胶甫 给 茫篮 版快父 pPrev 技泼</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(pCur-&gt;NextEntryOffset == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tpCur = (PSYSTEM_PROCESS_INFORMATION)((ULONG)pCur + pCur-&gt;NextEntryOffset);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">__NTQUERYSYSTEMINFORMATION_END:</span><br><span class=\"line\"></span><br><span class=\"line\">\thook_by_code(<span class=\"string\">&quot;ntdll.dll&quot;</span>, <span class=\"string\">&quot;ZwQuerySystemInformation&quot;</span>, </span><br><span class=\"line\">                 (PROC)NewZwQuerySystemInformation, g_pOrgZwQSI);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> status;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL WINAPI <span class=\"title function_\">NewCreateProcessA</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpApplicationName,</span></span><br><span class=\"line\"><span class=\"params\">    LPTSTR lpCommandLine,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    BOOL bInheritHandles,</span></span><br><span class=\"line\"><span class=\"params\">    DWORD dwCreationFlags,</span></span><br><span class=\"line\"><span class=\"params\">    LPVOID lpEnvironment,</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpCurrentDirectory,</span></span><br><span class=\"line\"><span class=\"params\">    LPSTARTUPINFO lpStartupInfo,</span></span><br><span class=\"line\"><span class=\"params\">    LPPROCESS_INFORMATION lpProcessInformation</span></span><br><span class=\"line\"><span class=\"params\">)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    BOOL bRet;</span><br><span class=\"line\">    FARPROC pFunc;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//调用原始API</span></span><br><span class=\"line\">    pFunc = GetProcAddress(GetModuleHandleA(<span class=\"string\">&quot;kernel32.dll&quot;</span>), <span class=\"string\">&quot;CreateProcessA&quot;</span>);</span><br><span class=\"line\">    pFunc = (FARPROC)((DWORD)pFunc + <span class=\"number\">2</span>);</span><br><span class=\"line\">    bRet = ((PFCREATEPROCESSA)pFunc)(lpApplicationName,</span><br><span class=\"line\">                                     lpCommandLine,</span><br><span class=\"line\">                                     lpProcessAttributes,</span><br><span class=\"line\">                                     lpThreadAttributes,</span><br><span class=\"line\">                                     bInheritHandles,</span><br><span class=\"line\">                                     dwCreationFlags,</span><br><span class=\"line\">                                     lpEnvironment,</span><br><span class=\"line\">                                     lpCurrentDirectory,</span><br><span class=\"line\">                                     lpStartupInfo,</span><br><span class=\"line\">                                     lpProcessInformation);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//向生成的子进程注入 stealth3.dll</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( bRet )</span><br><span class=\"line\">        InjectDll2(lpProcessInformation-&gt;hProcess, STR_MODULE_NAME);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bRet;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL WINAPI <span class=\"title function_\">NewCreateProcessW</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpApplicationName,</span></span><br><span class=\"line\"><span class=\"params\">    LPTSTR lpCommandLine,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class=\"line\"><span class=\"params\">    BOOL bInheritHandles,</span></span><br><span class=\"line\"><span class=\"params\">    DWORD dwCreationFlags,</span></span><br><span class=\"line\"><span class=\"params\">    LPVOID lpEnvironment,</span></span><br><span class=\"line\"><span class=\"params\">    LPCTSTR lpCurrentDirectory,</span></span><br><span class=\"line\"><span class=\"params\">    LPSTARTUPINFO lpStartupInfo,</span></span><br><span class=\"line\"><span class=\"params\">    LPPROCESS_INFORMATION lpProcessInformation</span></span><br><span class=\"line\"><span class=\"params\">)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    BOOL bRet;</span><br><span class=\"line\">    FARPROC pFunc;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//调用原始API</span></span><br><span class=\"line\">    pFunc = GetProcAddress(GetModuleHandleA(<span class=\"string\">&quot;kernel32.dll&quot;</span>), <span class=\"string\">&quot;CreateProcessW&quot;</span>);</span><br><span class=\"line\">    pFunc = (FARPROC)((DWORD)pFunc + <span class=\"number\">2</span>);</span><br><span class=\"line\">    bRet = ((PFCREATEPROCESSW)pFunc)(lpApplicationName,</span><br><span class=\"line\">                                     lpCommandLine,</span><br><span class=\"line\">                                     lpProcessAttributes,</span><br><span class=\"line\">                                     lpThreadAttributes,</span><br><span class=\"line\">                                     bInheritHandles,</span><br><span class=\"line\">                                     dwCreationFlags,</span><br><span class=\"line\">                                     lpEnvironment,</span><br><span class=\"line\">                                     lpCurrentDirectory,</span><br><span class=\"line\">                                     lpStartupInfo,</span><br><span class=\"line\">                                     lpProcessInformation);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//向生成的子进程注入 stealth3.dll</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( bRet )</span><br><span class=\"line\">        InjectDll2(lpProcessInformation-&gt;hProcess, STR_MODULE_NAME);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bRet;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL WINAPI <span class=\"title function_\">DllMain</span><span class=\"params\">(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span>            szCurProc[MAX_PATH] = &#123;<span class=\"number\">0</span>,&#125;;</span><br><span class=\"line\">    <span class=\"type\">char</span>            *p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 异常处理使注入不会发生在HideProc2.exe进程</span></span><br><span class=\"line\">    GetModuleFileNameA(<span class=\"literal\">NULL</span>, szCurProc, MAX_PATH);</span><br><span class=\"line\">    p = <span class=\"built_in\">strrchr</span>(szCurProc, <span class=\"string\">&#x27;\\\\&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( (p != <span class=\"literal\">NULL</span>) &amp;&amp; !_stricmp(p+<span class=\"number\">1</span>, <span class=\"string\">&quot;HideProc2.exe&quot;</span>) )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// change privilege</span></span><br><span class=\"line\">    SetPrivilege(SE_DEBUG_NAME, TRUE);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">switch</span>( fdwReason )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> DLL_PROCESS_ATTACH : </span><br><span class=\"line\">            <span class=\"comment\">// hook</span></span><br><span class=\"line\">            hook_by_hotpatch(<span class=\"string\">&quot;kernel32.dll&quot;</span>, <span class=\"string\">&quot;CreateProcessA&quot;</span>, </span><br><span class=\"line\">                             (PROC)NewCreateProcessA);</span><br><span class=\"line\">            hook_by_hotpatch(<span class=\"string\">&quot;kernel32.dll&quot;</span>, <span class=\"string\">&quot;CreateProcessW&quot;</span>, </span><br><span class=\"line\">                             (PROC)NewCreateProcessW);</span><br><span class=\"line\">            hook_by_code(<span class=\"string\">&quot;ntdll.dll&quot;</span>, <span class=\"string\">&quot;ZwQuerySystemInformation&quot;</span>, </span><br><span class=\"line\">                         (PROC)NewZwQuerySystemInformation, g_pOrgZwQSI);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">case</span> DLL_PROCESS_DETACH :</span><br><span class=\"line\">            <span class=\"comment\">// unhook</span></span><br><span class=\"line\">            unhook_by_hotpatch(<span class=\"string\">&quot;kernel32.dll&quot;</span>, <span class=\"string\">&quot;CreateProcessA&quot;</span>);</span><br><span class=\"line\">            unhook_by_hotpatch(<span class=\"string\">&quot;kernel32.dll&quot;</span>, <span class=\"string\">&quot;CreateProcessW&quot;</span>);</span><br><span class=\"line\">            unhook_by_code(<span class=\"string\">&quot;ntdll.dll&quot;</span>, <span class=\"string\">&quot;ZwQuerySystemInformation&quot;</span>, </span><br><span class=\"line\">                           g_pOrgZwQSI);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hook-by-hotpatch\"><a href=\"#hook-by-hotpatch\" class=\"headerlink\" title=\"hook_by_hotpatch()\"></a>hook_by_hotpatch()</h2><p>该函数运用热补丁技术钩取API</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL <span class=\"title function_\">hook_by_hotpatch</span><span class=\"params\">(LPCSTR szDllName, LPCSTR szFuncName, PROC pfnNew)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tFARPROC pFunc;</span><br><span class=\"line\">\tDWORD dwOldProtect, dwAddress;</span><br><span class=\"line\">\tBYTE pBuf[<span class=\"number\">5</span>] = &#123; <span class=\"number\">0xE9</span>, <span class=\"number\">0</span>, &#125;;</span><br><span class=\"line\">    BYTE pBuf2[<span class=\"number\">2</span>] = &#123; <span class=\"number\">0xEB</span>, <span class=\"number\">0xF9</span> &#125;;</span><br><span class=\"line\">\tPBYTE pByte;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpFunc = (FARPROC)GetProcAddress(GetModuleHandleA(szDllName), szFuncName);</span><br><span class=\"line\">\tpByte = (PBYTE)pFunc;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( pByte[<span class=\"number\">0</span>] == <span class=\"number\">0xEB</span> )</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), <span class=\"number\">7</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. NOP (0x90)</span></span><br><span class=\"line\">\tdwAddress = (DWORD)pfnNew - (DWORD)pFunc;</span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(&amp;pBuf[<span class=\"number\">1</span>], &amp;dwAddress, <span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), pBuf, <span class=\"number\">5</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2. MOV EDI, EDI (0x8BFF)</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(pFunc, pBuf2, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tVirtualProtect((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), <span class=\"number\">7</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用热补丁技术钩取API时，操作顺序非常重要。首先要将API起始地址上方的NOP*5指令修改为JMP XXXXXXXX。通过下面公式很容易求出XXXXXXXX值（即上述代码中dwAddress变量），计算公式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dwAddress=(DWORD)pfnNew - (DWORD)pFunc</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>上述公式与之前讲解的inline hook函数时介绍的地址计算公式实际上是一样的。</p>\n<p>XXXXXXXX&#x3D;要跳转的地址-当前指令地址-当前指令长度（5）</p>\n<p>当前指令（NOP*5）地址&#x3D;pFunc-5，所以上述公式可做如下修改：</p>\n<p>XXXXXXXX&#x3D;(DWORD)pfnNew - ((DWORD)pFunc - 5) - 5</p>\n<p>​                &#x3D;(DWORD)pfnNew - (DWORD)pFunc</p>\n<p>*pfnNew &#x3D; 用户钩取函数</p>\n<p>*pFunc &#x3D; 原API地址</p></blockquote>\n<p>求得XXXXXXXX值后，使用下述代码将NOP*5指令修改为JMP XXXXXXXX指令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">memcpy(&amp;pBuf[1], &amp;dwAddress, 4);</span><br><span class=\"line\">memcpy((LPVOID)((DWORD)pFunc - 5), pBuf, 5);</span><br></pre></td></tr></table></figure>\n\n<p>接下来，将位于API起始地址处的MOV EDI,EDI指令（2个字节大小）替换为JMP YY指令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">memcpy(pFunc, pBuf2, 2);</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用JMP YY指令时，要先计算出YY值，计算公式与前面相同。</p>\n<p>YY&#x3D;要跳转的地址-当前指令地址-当前指令长度（2）</p>\n<p>要跳转的地址是pFunc-5，当前指令地址为pFunc，YY值计算如下：</p>\n<p>YY&#x3D;(pFunc-5)-pFunc-2&#x3D;-7&#x3D;0xF9</p>\n<p>热补丁技术中，YY值总为0xF9，将其硬编码到源代码就可以了（0xF9是-7的”2的补码”形式）。</p></blockquote>\n<h2 id=\"unhook-by-hotpatch\"><a href=\"#unhook-by-hotpatch\" class=\"headerlink\" title=\"unhook_by_hotpatch()\"></a>unhook_by_hotpatch()</h2><p>该函数用于脱钩</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL <span class=\"title function_\">unhook_by_hotpatch</span><span class=\"params\">(LPCSTR szDllName, LPCSTR szFuncName)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FARPROC pFunc;</span><br><span class=\"line\">    DWORD dwOldProtect;</span><br><span class=\"line\">    PBYTE pByte;</span><br><span class=\"line\">    BYTE pBuf[<span class=\"number\">5</span>] = &#123; <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x90</span> &#125;;</span><br><span class=\"line\">    BYTE pBuf2[<span class=\"number\">2</span>] = &#123; <span class=\"number\">0x8B</span>, <span class=\"number\">0xFF</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    pFunc = (FARPROC)GetProcAddress(GetModuleHandleA(szDllName), szFuncName);</span><br><span class=\"line\">    pByte = (PBYTE)pFunc;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( pByte[<span class=\"number\">0</span>] != <span class=\"number\">0xEB</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">    VirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. NOP (0x90)</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>((LPVOID)((DWORD)pFunc - <span class=\"number\">5</span>), pBuf, <span class=\"number\">5</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2. MOV EDI, EDI (0x8BFF)</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(pFunc, pBuf2, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    VirtualProtect((LPVOID)pFunc, <span class=\"number\">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"NewCreateProcessA\"><a href=\"#NewCreateProcessA\" class=\"headerlink\" title=\"NewCreateProcessA()\"></a>NewCreateProcessA()</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL WINAPI NewCreateProcessA(</span><br><span class=\"line\">    LPCTSTR lpApplicationName,</span><br><span class=\"line\">    LPTSTR lpCommandLine,</span><br><span class=\"line\">    LPSECURITY_ATTRIBUTES lpProcessAttributes,</span><br><span class=\"line\">    LPSECURITY_ATTRIBUTES lpThreadAttributes,</span><br><span class=\"line\">    BOOL bInheritHandles,</span><br><span class=\"line\">    DWORD dwCreationFlags,</span><br><span class=\"line\">    LPVOID lpEnvironment,</span><br><span class=\"line\">    LPCTSTR lpCurrentDirectory,</span><br><span class=\"line\">    LPSTARTUPINFO lpStartupInfo,</span><br><span class=\"line\">    LPPROCESS_INFORMATION lpProcessInformation</span><br><span class=\"line\">)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    BOOL bRet;</span><br><span class=\"line\">    FARPROC pFunc;</span><br><span class=\"line\"></span><br><span class=\"line\">    //调用原始API</span><br><span class=\"line\">    pFunc = GetProcAddress(GetModuleHandleA(&quot;kernel32.dll&quot;), &quot;CreateProcessA&quot;);</span><br><span class=\"line\">    pFunc = (FARPROC)((DWORD)pFunc + 2);</span><br><span class=\"line\">    bRet = ((PFCREATEPROCESSA)pFunc)(lpApplicationName,</span><br><span class=\"line\">                                     lpCommandLine,</span><br><span class=\"line\">                                     lpProcessAttributes,</span><br><span class=\"line\">                                     lpThreadAttributes,</span><br><span class=\"line\">                                     bInheritHandles,</span><br><span class=\"line\">                                     dwCreationFlags,</span><br><span class=\"line\">                                     lpEnvironment,</span><br><span class=\"line\">                                     lpCurrentDirectory,</span><br><span class=\"line\">                                     lpStartupInfo,</span><br><span class=\"line\">                                     lpProcessInformation);</span><br><span class=\"line\"></span><br><span class=\"line\">    //向生成的子进程注入 stealth3.dll</span><br><span class=\"line\">    if( bRet )</span><br><span class=\"line\">        InjectDll2(lpProcessInformation-&gt;hProcess, STR_MODULE_NAME);</span><br><span class=\"line\"></span><br><span class=\"line\">    return bRet;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以看出，该函数不再进行脱钩、挂钩操作，且与已有函数根本的不同在于添加了计算pFunc的语句：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pFunc = (FARPROC)((DWORD)pFunc + 2);</span><br></pre></td></tr></table></figure>\n\n<p>该代码语句用于1跳过位于API起始地址处的JMP YY指令（2个字节，原指令为MOV EDI,EDI），从紧接的下一条指令开始执行，与调用原API的效果一样。</p>\n<h1 id=\"使用热补丁API钩取技术时要考虑的问题\"><a href=\"#使用热补丁API钩取技术时要考虑的问题\" class=\"headerlink\" title=\"使用热补丁API钩取技术时要考虑的问题\"></a>使用热补丁API钩取技术时要考虑的问题</h1><p>热补丁API钩取技术并不是万能的，使用时目标API必须满足它的使用条件（NOP*5指令+MOV EDI,EDI指令），但有些API却不满足这一条件，如kernel32.GetStartInfoA。所以使用前要确定其是否满足条件</p>\n","text":"API代码修改技术的问题对于全局API钩取——基于Win10的隐藏notepad.exe练习——stealth2.cpp——NewCreateProcessA(...","permalink":"/post/HotFix Hook","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[],"tags":[{"name":"hook技术","slug":"hook技术","count":6,"path":"api/tags/hook技术.json"},{"name":"逆向工程核心原理","slug":"逆向工程核心原理","count":7,"path":"api/tags/逆向工程核心原理.json"},{"name":"API hook","slug":"API-hook","count":5,"path":"api/tags/API-hook.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#API%E4%BB%A3%E7%A0%81%E4%BF%AE%E6%94%B9%E6%8A%80%E6%9C%AF%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">API代码修改技术的问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%83%AD%E8%A1%A5%E4%B8%81%EF%BC%88%E4%BF%AE%E6%94%B97%E4%B8%AA%E5%AD%97%E8%8A%82%E4%BB%A3%E7%A0%81%EF%BC%89\"><span class=\"toc-text\">热补丁（修改7个字节代码）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9AAPI%E8%B5%B7%E5%A7%8B%E4%BB%A3%E7%A0%81%E7%9A%84%E5%BD%A2%E6%80%81\"><span class=\"toc-text\">普通API起始代码的形态</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E5%8F%8A%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">工作原理及特征</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%AC%A1%E8%B7%B3%E8%BD%AC\"><span class=\"toc-text\">二次跳转</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E9%9C%80%E8%A6%81%E5%9C%A8%E9%92%A9%E5%8F%96%E5%87%BD%E6%95%B0%E5%86%85%E9%83%A8%E8%BF%9B%E8%A1%8C%E8%84%B1%E9%92%A9-x2F-%E6%8C%82%E9%92%A9%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">不需要在钩取函数内部进行脱钩&#x2F;挂钩操作</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8EWin10%E7%9A%84%E9%9A%90%E8%97%8Fnotepad-exe%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\">基于Win10的隐藏notepad.exe练习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#stealth3-cpp%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90\"><span class=\"toc-text\">stealth3.cpp源码分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hook-by-hotpatch\"><span class=\"toc-text\">hook_by_hotpatch()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#unhook-by-hotpatch\"><span class=\"toc-text\">unhook_by_hotpatch()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NewCreateProcessA\"><span class=\"toc-text\">NewCreateProcessA()</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E7%83%AD%E8%A1%A5%E4%B8%81API%E9%92%A9%E5%8F%96%E6%8A%80%E6%9C%AF%E6%97%B6%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">使用热补丁API钩取技术时要考虑的问题</span></a></li></ol>","author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"认识TEB","uid":"cd812a002a8157c55aad5231f6135034","slug":"认识TEB","date":"2022-04-08T11:55:04.000Z","updated":"2025-06-08T15:09:36.776Z","comments":true,"path":"api/articles/认识TEB.json","keywords":null,"cover":[],"text":"TEB（Threat Environment Block，线程环境块） TEB指线程环境块，该结构体包含进程中运行线程的各种信息，进程中的每个线程都对应一个TE...","permalink":"/post/认识TEB","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":9,"path":"api/tags/逆向.json"},{"name":"TEB","slug":"TEB","count":1,"path":"api/tags/TEB.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"IRP Hook","uid":"ba14c8c55e36720dc30bd604d682a355","slug":"IRP Hook","date":"2022-03-27T07:18:13.000Z","updated":"2025-06-05T15:26:12.964Z","comments":true,"path":"api/articles/IRP Hook.json","keywords":null,"cover":[],"text":"3环与0环通信（常规方式）本篇介绍一下3环与0环通信的原理（常规方式），介绍与之相关的结构体，对象等，最后代码实现并模拟操作系统进行3环和0环的通信。 设备对象...","permalink":"/post/IRP Hook","photos":[],"count_time":{"symbolsCount":"34k","symbolsTime":"31 mins."},"categories":[],"tags":[{"name":"hook技术","slug":"hook技术","count":6,"path":"api/tags/hook技术.json"},{"name":"逆向工程核心原理","slug":"逆向工程核心原理","count":7,"path":"api/tags/逆向工程核心原理.json"},{"name":"API hook","slug":"API-hook","count":5,"path":"api/tags/API-hook.json"},{"name":"IRP","slug":"IRP","count":1,"path":"api/tags/IRP.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}