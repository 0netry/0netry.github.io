{"title":"GitHub搭建自己的博客","uid":"f48f1848e82a474528d06090473058c1","slug":"GitHub搭建自己的博客","date":"2022-02-15T15:24:16.000Z","updated":"2025-06-04T10:15:10.501Z","comments":true,"path":"api/articles/GitHub搭建自己的博客.json","keywords":null,"cover":"/img/bigball.jpg","content":"<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>根据自己的电脑安装对应的版本，安装选项全部默认，一路点击<code>Next</code>。</p>\n<p>安装好之后，按<code>Win+R</code>打开命令提示符，输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，则表示安装成功。</p>\n<img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/npm.png\" class=\"\">\n\n\n\n<h2 id=\"添加国内镜像源或使用cnpm\"><a href=\"#添加国内镜像源或使用cnpm\" class=\"headerlink\" title=\"添加国内镜像源或使用cnpm\"></a>添加国内镜像源或使用cnpm</h2><p>如果没有梯子的话，可以使用阿里的国内镜像进行加速</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<p>或安装淘宝cnpm</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>首先新建一个文件夹，用来存放自己的博客文件。</p>\n<p>在该目录下右键点击<code>Git Bash Here</code>，打开git的控制台窗口。</p>\n<p>定位到该目录下，输入<code>npm i hexo-cli -g</code>安装Hexo。会有几个报错，无视它就行。</p>\n<p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p>\n<p>然后输入<code>hexo init</code>初始化文件夹，接着输入<code>npm install</code>安装必备的组件。</p>\n<p>这样本地的网站配置也弄好啦，输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器，然后浏览器打开<a href=\"https://link.zhihu.com/?target=http://localhost:4000/\">http://localhost:4000/</a>，就可以看到博客啦。</p>\n<p>注：①按<code>ctrl+c</code>关闭本地服务器，若无法结束，则打开任务管理器，结束名为Node.js JavaScript Runtime的任务即可。</p>\n<p>② 卸载hexo命令<code>npm uninstall hexo-cli -g</code>。</p>\n<h1 id=\"连接Github与本地\"><a href=\"#连接Github与本地\" class=\"headerlink\" title=\"连接Github与本地\"></a>连接Github与本地</h1><p>首先右键打开git bash，然后输入下面命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;your email address&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>用户名和邮箱根据注册github的信息自行修改。</p>\n<h2 id=\"配置ssh\"><a href=\"#配置ssh\" class=\"headerlink\" title=\"配置ssh\"></a>配置ssh</h2><p>① 首先在用户主目录下使用如下命令查看SSH keys是否存在</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> -al ~/.ssh</span><br><span class=\"line\">Lists the files <span class=\"keyword\">in</span> your .ssh directory, <span class=\"keyword\">if</span> they exist</span><br></pre></td></tr></table></figure>\n\n<p>② 若不存在，打开用户主目录，Git Bash Here，使用如下命令创建SSH Key：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail@example.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。</p>\n<p>如果一切顺利的话，可以在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>\n<img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/ssh-key-gen.png\" class=\"\">\n\n<img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/ssh-key.png\" class=\"\">\n\n<p>③  SSH key创建成功后，cd .ssh进入.ssh文件夹，cat id_rsa.pub查看公钥内容</p>\n<p>④ 登陆GitHub，打开“Account settings”，“SSH Keys”页面：</p>\n<p>然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴<code>id_rsa.pub</code>文件的内容</p>\n<img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/add-ssh-key.png\" class=\"\">\n\n\n\n<h1 id=\"更改主题\"><a href=\"#更改主题\" class=\"headerlink\" title=\"更改主题\"></a>更改主题</h1><p>这里以使用Aurora主题为例：</p>\n<h3 id=\"步骤-1-安装主题\"><a href=\"#步骤-1-安装主题\" class=\"headerlink\" title=\"步骤 1 - 安装主题\"></a>步骤 1 - 安装主题</h3><p>① 在控制台中，进入 Hexo 项目的根目录，然后运行以下命令安装主题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-aurora --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤-2-生成主题配置\"><a href=\"#步骤-2-生成主题配置\" class=\"headerlink\" title=\"步骤 2 - 生成主题配置\"></a>步骤 2 - 生成主题配置</h3><p>因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以需要自己创建一个配置文件。只需要在 Hexo 博客的根目录下创建一个 _config.aurora.yml 配置文件来配置主题。</p>\n<p><strong>获取一个默认的主题配置模版</strong></p>\n<ul>\n<li>可以执行以下命令，但是这个命令只能在 Linux 或者 MacOS 下执行，如果你用的是 Windows 系统，可以自行在 node_modules 中找到对应目录复制过来</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -rf ./node_modules/hexo-theme-aurora/_config.yml ./_config.aurora.yml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤-3-设置permalink\"><a href=\"#步骤-3-设置permalink\" class=\"headerlink\" title=\"步骤 3 - 设置permalink\"></a>步骤 3 - 设置<code>permalink</code></h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>因为使用了 Vue-router，Hexo 默认生成的页面和文章的 permalink 与 Vue router 中的 path 是不相符的，就会出现无法访问的问题。所以需要修改 Hexo 默认配置文件里面的 permalink 参数。</strong></p></blockquote>\n<h4 id=\"步骤-3-1\"><a href=\"#步骤-3-1\" class=\"headerlink\" title=\"#步骤 3.1\"></a><a href=\"https://aurora.tridiamond.tech/zh/guide/getting-started.html#%E6%AD%A5%E9%AA%A4-3-1\">#</a>步骤 3.1</h4><p>打开在 Hexo 根目录下的 <code>_config.yml</code></p>\n<h4 id=\"步骤-3-2\"><a href=\"#步骤-3-2\" class=\"headerlink\" title=\"#步骤 3.2\"></a><a href=\"https://aurora.tridiamond.tech/zh/guide/getting-started.html#%E6%AD%A5%E9%AA%A4-3-2\">#</a>步骤 3.2</h4><p>修改 <code>permalink</code> 参数为 <code>/post/:title.html</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://tridiamond.tech</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">/post/:title.html</span></span><br><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤4-重新生成与本地服务器\"><a href=\"#步骤4-重新生成与本地服务器\" class=\"headerlink\" title=\"步骤4 - 重新生成与本地服务器\"></a>步骤4 - 重新生成与本地服务器</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>使用以下命令来运行本地环境。</strong></p></blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp; hexo g &amp; hexo server</span><br></pre></td></tr></table></figure>\n\n<p><strong>提示</strong></p>\n<p>改变了任何配置都需要重新生成 Hexo 的静态文件！</p>\n<p>当文件都生成完毕之后，就可以通过 <a href=\"https://localhost:4000/\">https://localhost:4000在新窗口打开</a> 访问你的博客了。</p>\n<h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开git bash，安装一个扩展<code>npm i hexo-deployer-git</code>。</p>\n<p>然后输入<code>hexo new post &quot;article title&quot;</code>，新建一篇文章。</p>\n<p>然后打开<code>D:\\study\\program\\blog\\source\\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到github上。这时打开你的github.io主页就能看到发布的文章啦。</p>\n<h1 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h1><h2 id=\"修改分支\"><a href=\"#修改分支\" class=\"headerlink\" title=\"修改分支\"></a>修改分支</h2><p>由于在_config.yml中设置了提交分支为master，所以需要在GitHub中也进行设置</p>\n<p>仓库首页，默认是main，修改成master</p>\n<img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/branch1.png\" class=\"\">\n\n\n\n<p>Settings -&gt; Pages -&gt;Source，默认是main，修改成master并Save</p>\n<img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/branch2.png\" class=\"\">\n\n\n\n<h2 id=\"配置-config-yml中有关deploy的部分\"><a href=\"#配置-config-yml中有关deploy的部分\" class=\"headerlink\" title=\"配置 _config.yml中有关deploy的部分\"></a>配置 _config.yml中有关deploy的部分</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。</p>\n<p>首先，<code>ssh key</code>肯定要配置好。</p>\n<p>其次，配置<code>_config.yml</code>中有关deploy的部分：</p>\n<p>正确写法：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">git@github.com:liuxianan/liuxianan.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>错误写法：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">github</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">https://github.com/liuxianan/liuxianan.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Deployer not found:</span> <span class=\"string\">github</span> <span class=\"string\">或者</span> <span class=\"attr\">Deployer not found:</span> <span class=\"string\">git</span></span><br></pre></td></tr></table></figure>\n\n<p>原因是还需要安装一个插件：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git <span class=\"attr\">--save</span></span><br></pre></td></tr></table></figure>\n\n<p>其它命令不确定，部署这个命令一定要用git bash，否则会提示<code>Permission denied (publickey).</code></p>\n<p>打开你的git bash，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会</p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><h2 id=\"hexo-g-时报错-err-Error-Cannot-find-module-‘truncate-html’\"><a href=\"#hexo-g-时报错-err-Error-Cannot-find-module-‘truncate-html’\" class=\"headerlink\" title=\"hexo g 时报错 err: Error: Cannot find module ‘truncate-html’\"></a>hexo g 时报错 err: Error: Cannot find module ‘truncate-html’</h2><img src=\"/post/GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/module_not_find_error.png\" class=\"\">\n\n<h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><p>根据报错安装对应的模块<code>npm install module_name</code></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://zhuanlan.zhihu.com/p/35668237\">超详细Hexo+Github博客搭建小白教程</a></p>\n<p><a href=\"https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\">使用hexo+github搭建免费个人博客详细教程</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a></p>\n<p><a href=\"https://aurora.tridiamond.tech/zh/guide/\">Hexo Aurora中文指南</a></p>\n","text":"安装Node.js根据自己的电脑安装对应的版本，安装选项全部默认，一路点击Next。 安装好之后，按Win+R打开命令提示符，输入node -v和npm -v，...","permalink":"/post/GitHub搭建自己的博客","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"搭建博客","slug":"搭建博客","count":1,"path":"api/tags/搭建博客.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Node-js\"><span class=\"toc-text\">安装Node.js</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E6%88%96%E4%BD%BF%E7%94%A8cnpm\"><span class=\"toc-text\">添加国内镜像源或使用cnpm</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Hexo\"><span class=\"toc-text\">安装Hexo</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5Github%E4%B8%8E%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">连接Github与本地</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEssh\"><span class=\"toc-text\">配置ssh</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">更改主题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-1-%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">步骤 1 - 安装主题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-2-%E7%94%9F%E6%88%90%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">步骤 2 - 生成主题配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-3-%E8%AE%BE%E7%BD%AEpermalink\"><span class=\"toc-text\">步骤 3 - 设置permalink</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-3-1\"><span class=\"toc-text\">步骤 3.1</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-3-2\"><span class=\"toc-text\">步骤 3.2</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A44-%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E4%B8%8E%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">步骤4 - 重新生成与本地服务器</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%86%99%E6%96%87%E7%AB%A0%E3%80%81%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">写文章、发布文章</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%9A\"><span class=\"toc-text\">注意事项：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%88%86%E6%94%AF\"><span class=\"toc-text\">修改分支</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-config-yml%E4%B8%AD%E6%9C%89%E5%85%B3deploy%E7%9A%84%E9%83%A8%E5%88%86\"><span class=\"toc-text\">配置 _config.yml中有关deploy的部分</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">遇到的问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hexo-g-%E6%97%B6%E6%8A%A5%E9%94%99-err-Error-Cannot-find-module-%E2%80%98truncate-html%E2%80%99\"><span class=\"toc-text\">hexo g 时报错 err: Error: Cannot find module ‘truncate-html’</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95\"><span class=\"toc-text\">解决办法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"https://github.com/0netry","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"VBScript教程","uid":"28df775ed85d265dbcba7f21d8f65afc","slug":"VBScript教程","date":"2022-03-15T14:05:53.000Z","updated":"2025-03-24T07:31:35.191Z","comments":true,"path":"api/articles/VBScript教程.json","keywords":null,"cover":null,"text":"VBScript 变量VBScript 变量VBScript 变量用于保存值或表达式。 变量可以有一个短的名称，如 x，或一个更具描述性的名称，如 carnam...","permalink":"/post/VBScript教程","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"编程","slug":"编程","count":1,"path":"api/categories/编程.json"}],"tags":[{"name":"编程","slug":"编程","count":1,"path":"api/tags/编程.json"},{"name":"VBScript","slug":"VBScript","count":1,"path":"api/tags/VBScript.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"https://github.com/0netry","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"PE解析——IAT","uid":"72108d70d9a862b742fe8e97b0c6b415","slug":"PE解析——IAT","date":"2021-12-23T11:51:51.000Z","updated":"2025-06-08T15:10:02.038Z","comments":true,"path":"api/articles/PE解析——IAT.json","keywords":null,"cover":[],"text":"IAT全称Import Address Table，即导入地址表 IMAGE_IMPORT_DESCRIPTOR结构体123456789101112131415...","permalink":"/post/PE解析——IAT","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"逆向","slug":"逆向","count":7,"path":"api/tags/逆向.json"},{"name":"PE文件","slug":"PE文件","count":2,"path":"api/tags/PE文件.json"},{"name":"IAT","slug":"IAT","count":1,"path":"api/tags/IAT.json"}],"author":{"name":"0netry","slug":"blog-author","avatar":"/img/tree.png","link":"/","description":"0与1只在一念之间","socials":{"github":"https://github.com/0netry","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}